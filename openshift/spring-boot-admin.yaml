apiVersion: v1
kind: Template
labels:
  template: spring-boot-admin
  project: spring-boot-admin
metadata:
  annotations:
    description: Spring Boot Admin on OpenShift Template
    iconClass: icon-java
    tags: microservice,spring,spring-boot
    author: Ricardo Zanini <ricardozanini@gmail.com>
    url: https://github.com/ricardozanini/spring-boot-admin-k8s
  name: spring-boot-admin
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: spring-boot-admin
    name: spring-boot-admin
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: spring-boot-admin
    name: spring-boot-admin
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: spring-boot-admin:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /
      git:
        ref: master
        uri: https://github.com/ricardozanini/spring-boot-admin-k8s
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_ARGS_APPEND
          value: --projects admin --also-make
        - name: ARTIFACT_DIR
          value: admin/target
        - name: MODULE_DIR
          value: admin
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: spring-boot-admin
    name: spring-boot-admin
  spec:
    replicas: 1
    selector:
      app: spring-boot-admin
      deploymentconfig: spring-boot-admin
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: spring-boot-admin
          deploymentconfig: spring-boot-admin
      spec:
        containers:
        - env:
          - name: SERVER_PORT
            value: "8080"
          image: spring-boot-admin
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: spring-boot-admin
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 600m
              memory: 256Mi
            requests:
              cpu: 400m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot-admin
        from:
          kind: ImageStreamTag
          name: spring-boot-admin:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-admin
    name: spring-boot-admin
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: spring-boot-admin
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: spring-boot-admin
    name: spring-boot-admin
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: spring-boot-admin
      weight: 100
